model {
    icnet {
        num_classes: 2
        filter_scale: 1.0
        pooling_factors: [1.0, 2.0, 3.0, 4.0]
        feature_extractor {
            type: 'dilated_resnet50'
        }
        hyperparams {
            batch_norm {
                train: true
                scale: true
                center: true
                decay: 0.9997
                epsilon: 0.00001
            }
            regularizer {
                l2_regularizer {
                     weight: 0.0001
                }
            }
            initializer {
                variance_scaling_initializer {}
            }
        }
        loss {
            classification_loss {
                softmax {}
            }
            use_auxiliary_loss: true
        }
        main_branch_loss_weight: 1.0
        second_branch_loss_weight: 0.4
        first_branch_loss_weight: 0.4
    }
}

train_config: {
    batch_size: 32
    num_steps: 12000
    fine_tune_checkpoint_type: "segmentation"
    fine_tune_checkpoint: "BASE_MODEL/0818_pspnet_1.0_713_resnet_v1/model.ckpt"

    optimizer {
        momentum_optimizer: {
            learning_rate: {
                polynomial_decay_learning_rate {
                    initial_learning_rate: 0.01
                    decay_steps: 12000
                    power: 0.9
                }
            }
            momentum_optimizer_value: 0.9
        }
    }

    preprocessor_step {
        random_image_scale {
            min_scale_ratio: 0.2
            max_scale_ratio: 2.0
        }
    }
    preprocessor_step {
        random_image_crop {
            crop_height: 601
            crop_width: 601
            images_channel_dim: 3
            labels_channel_dim: 1
        }
    }
    preprocessor_step {
        random_horizontal_flip {}
    }
    preprocessor_step {
        random_vertical_flip {}
    }
    preprocessor_step {
        random_rotation {}
    }
    batch_queue_capacity: 128
    num_batch_queue_threads: 12
    prefetch_queue_capacity: 32
}

train_input_reader: {
    num_examples: 400
    shuffle: true
    tf_record_input_reader {
        input_path: aaa
    }
    num_readers: 1
}


eval_config: {
    num_examples: 400
    eval_input_type {
        padded_eval_input {
            height: 601
            width: 601
        }
    }
}

eval_input_reader: {
    shuffle: false
    tf_record_input_reader {
        input_path: aa
    }
    num_readers: 1
}
